// Code generated by MockGen. DO NOT EDIT.
// Source: metrics.go

// Package metrics is a generated GoMock package.
package metrics

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	aci "github.com/virtual-kubelet/azure-aci/client/aci"
	statsv1alpha1 "github.com/virtual-kubelet/virtual-kubelet/node/api/statsv1alpha1"
	v1 "k8s.io/api/core/v1"
)

// MockPodGetter is a mock of PodGetter interface.
type MockPodGetter struct {
	ctrl     *gomock.Controller
	recorder *MockPodGetterMockRecorder
}

// MockPodGetterMockRecorder is the mock recorder for MockPodGetter.
type MockPodGetterMockRecorder struct {
	mock *MockPodGetter
}

// NewMockPodGetter creates a new mock instance.
func NewMockPodGetter(ctrl *gomock.Controller) *MockPodGetter {
	mock := &MockPodGetter{ctrl: ctrl}
	mock.recorder = &MockPodGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPodGetter) EXPECT() *MockPodGetterMockRecorder {
	return m.recorder
}

// GetPods mocks base method.
func (m *MockPodGetter) GetPods() []*v1.Pod {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPods")
	ret0, _ := ret[0].([]*v1.Pod)
	return ret0
}

// GetPods indicates an expected call of GetPods.
func (mr *MockPodGetterMockRecorder) GetPods() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPods", reflect.TypeOf((*MockPodGetter)(nil).GetPods))
}

// MockContainerGroupMetricsGetter is a mock of ContainerGroupMetricsGetter interface.
type MockContainerGroupMetricsGetter struct {
	ctrl     *gomock.Controller
	recorder *MockContainerGroupMetricsGetterMockRecorder
}

// MockContainerGroupMetricsGetterMockRecorder is the mock recorder for MockContainerGroupMetricsGetter.
type MockContainerGroupMetricsGetterMockRecorder struct {
	mock *MockContainerGroupMetricsGetter
}

// NewMockContainerGroupMetricsGetter creates a new mock instance.
func NewMockContainerGroupMetricsGetter(ctrl *gomock.Controller) *MockContainerGroupMetricsGetter {
	mock := &MockContainerGroupMetricsGetter{ctrl: ctrl}
	mock.recorder = &MockContainerGroupMetricsGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContainerGroupMetricsGetter) EXPECT() *MockContainerGroupMetricsGetterMockRecorder {
	return m.recorder
}

// GetContainerGroupMetrics mocks base method.
func (m *MockContainerGroupMetricsGetter) GetContainerGroupMetrics(ctx context.Context, resourceGroup, containerGroup string, options aci.MetricsRequest) (*aci.ContainerGroupMetricsResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContainerGroupMetrics", ctx, resourceGroup, containerGroup, options)
	ret0, _ := ret[0].(*aci.ContainerGroupMetricsResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContainerGroupMetrics indicates an expected call of GetContainerGroupMetrics.
func (mr *MockContainerGroupMetricsGetterMockRecorder) GetContainerGroupMetrics(ctx, resourceGroup, containerGroup, options interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContainerGroupMetrics", reflect.TypeOf((*MockContainerGroupMetricsGetter)(nil).GetContainerGroupMetrics), ctx, resourceGroup, containerGroup, options)
}

// MockpodStatsGetter is a mock of podStatsGetter interface.
type MockpodStatsGetter struct {
	ctrl     *gomock.Controller
	recorder *MockpodStatsGetterMockRecorder
}

// MockpodStatsGetterMockRecorder is the mock recorder for MockpodStatsGetter.
type MockpodStatsGetterMockRecorder struct {
	mock *MockpodStatsGetter
}

// NewMockpodStatsGetter creates a new mock instance.
func NewMockpodStatsGetter(ctrl *gomock.Controller) *MockpodStatsGetter {
	mock := &MockpodStatsGetter{ctrl: ctrl}
	mock.recorder = &MockpodStatsGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockpodStatsGetter) EXPECT() *MockpodStatsGetterMockRecorder {
	return m.recorder
}

// GetPodStats mocks base method.
func (m *MockpodStatsGetter) GetPodStats(ctx context.Context, pod *v1.Pod) (*statsv1alpha1.PodStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPodStats", ctx, pod)
	ret0, _ := ret[0].(*statsv1alpha1.PodStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPodStats indicates an expected call of GetPodStats.
func (mr *MockpodStatsGetterMockRecorder) GetPodStats(ctx, pod interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPodStats", reflect.TypeOf((*MockpodStatsGetter)(nil).GetPodStats), ctx, pod)
}
